name: Compilar Kernel Amlogic

# Este workflow será acionado manually a partir da aba "Actions" do GitHub
on:
  workflow_dispatch:

jobs:
  build:
    # A máquina virtual que executará o trabalho
    runs-on: ubuntu-latest

    steps:
      # 1. Baixa o código-fonte do seu repositório
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2. Instala todas as dependências necessárias para a compilação cruzada
      - name: Instalar dependências
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev bc rsync git gcc-aarch64-linux-gnu

      # 3. Configura o Kernel e ativa o Bluetooth
      - name: Configurar o Kernel
        run: |
          # Primeiro, gera o arquivo .config base
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- meson64_a32_defconfig
          
          # Em seguida, ativa as configurações de Bluetooth via script
          echo "Ativando configurações de Bluetooth..."
          ./scripts/config --enable CONFIG_BT
          ./scripts/config --enable CONFIG_BT_LE
          ./scripts/config --module CONFIG_BT_HCIUART
          ./scripts/config --set-string CONFIG_BT_HCIUART_PROTO "h4"
          ./scripts/config --module CONFIG_BT_HCIUSB
          ./scripts/config --module CONFIG_BT_RFCOMM
          ./scripts/config --module CONFIG_BT_RFCOMM_TTY
          ./scripts/config --module CONFIG_BT_BNEP
          ./scripts/config --set-string CONFIG_BT_BNEP_PROTO_FILTER "y"
          ./scripts/config --module CONFIG_BT_HIDP

          # Finalmente, deixa o Kconfig resolver as dependências e perguntas silenciosamente
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig

      # 4. Compila o Kernel
      # Usamos $(nproc) para usar todos os núcleos de CPU disponíveis no runner
      - name: Compilar o Kernel e os DTBs
        run: |
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)

      # 5. Empacota os arquivos compilados para download
      - name: Preparar artefatos
        run: |
          mkdir -p ../kernel_output/
          # Copia a imagem principal do kernel
          cp arch/arm64/boot/Image ../kernel_output/
          # Copia os Device Tree Blobs (DTBs)
          cp -r arch/arm64/boot/dts/amlogic/ ../kernel_output/dts/

      # 6. Faz o upload dos arquivos compilados como um "artefato"
      - name: Upload dos Artefatos
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Amlogic
          path: ../kernel_output/
