name: Compilar Kernel Amlogic

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar dependências
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev bc rsync git gcc-arm-linux-gnueabihf

      - name: Limpeza do build anterior
        run: |
          make ARCH=arm mrproper

      - name: Configurar o Kernel
        env:
          CONFIG_: CONFIG_
        run: |
          # Use ARMv7-A flags for compatibility with S905X running Android 32-bit
          export ARCH=arm
          export CROSS_COMPILE=arm-linux-gnueabihf-
          export CFLAGS="-march=armv7-a"
          export KCFLAGS="-march=armv7-a"

          make ARCH=arm meson64_a32_defconfig
          # cp .config-minimal .config
          cp .configatv .config

          # Apply configuration
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- olddefconfig

      - name: Compilar o Kernel, DTBs e módulos
        env:
          CONFIG_: CONFIG_
        run: |
          export ARCH=arm
          export CROSS_COMPILE=arm-linux-gnueabihf-
          export CFLAGS="-march=armv7-a"
          export KCFLAGS="-march=armv7-a"
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- CFLAGS="-march=armv7-a" KCFLAGS="-march=armv7-a" V=1 -j$(nproc)
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- V=1 modules
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- INSTALL_MOD_PATH=../kernel_output V=1 modules_install

      - name: Preparar artefatos
        run: |
          mkdir -p ../kernel_output/dts/
          cp arch/arm/boot/zImage ../kernel_output/
          cp arch/arm/boot/dts/amlogic/meson-gxl-s905x-*.dtb ../kernel_output/dts/
          cp .config ../kernel_output/

      - name: Upload dos Artefatos
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Amlogic
          path: ../kernel_output/
